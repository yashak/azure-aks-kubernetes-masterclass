# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches: 
    include:
      - master
  paths:
    include:
      - azure-aks-usermgmt-webapp-demo/*

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
pool:
  vmImage: $(vmImageName)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'azure-aks-usermgmt-webapp-demo/pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/azure-aks-usermgmt-webapp-demo/'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish pipeline artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'

- stage: Publish
  displayName: Publish stage
  jobs:
  - job: PublishDockerImage
    displayName: Publish Docker image
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'dockerhub-azure-aks-usermgmt-webapp-demo'
        repository: 'jkolonkova/azure-aks-usermgmt-webapp-demo'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'